# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 93.631 ops/s
# Warmup Iteration   2: 102.615 ops/s
# Warmup Iteration   3: 106.204 ops/s
# Warmup Iteration   4: 108.056 ops/s
# Warmup Iteration   5: 108.492 ops/s
Iteration   1: 108.733 ops/s
Iteration   2: 109.213 ops/s
Iteration   3: 109.079 ops/s
Iteration   4: 108.209 ops/s
Iteration   5: 108.568 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 91.973 ops/s
# Warmup Iteration   2: 106.675 ops/s
# Warmup Iteration   3: 107.565 ops/s
# Warmup Iteration   4: 107.864 ops/s
# Warmup Iteration   5: 110.372 ops/s
Iteration   1: 110.890 ops/s
Iteration   2: 110.670 ops/s
Iteration   3: 107.595 ops/s
Iteration   4: 111.222 ops/s
Iteration   5: 110.928 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  109.511 Å}(99.9%) 1.972 ops/s [Average]
  (min, avg, max) = (107.595, 109.511, 111.222), stdev = 1.304
  CI (99.9%): [107.539, 111.483] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 43.744 ops/s
# Warmup Iteration   2: 48.217 ops/s
# Warmup Iteration   3: 49.760 ops/s
# Warmup Iteration   4: 50.140 ops/s
# Warmup Iteration   5: 49.812 ops/s
Iteration   1: 46.581 ops/s
Iteration   2: 50.294 ops/s
Iteration   3: 50.334 ops/s
Iteration   4: 50.060 ops/s
Iteration   5: 50.595 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 43.756 ops/s
# Warmup Iteration   2: 48.651 ops/s
# Warmup Iteration   3: 51.294 ops/s
# Warmup Iteration   4: 51.218 ops/s
# Warmup Iteration   5: 50.710 ops/s
Iteration   1: 47.819 ops/s
Iteration   2: 51.319 ops/s
Iteration   3: 51.135 ops/s
Iteration   4: 51.219 ops/s
Iteration   5: 51.252 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  50.061 Å}(99.9%) 2.419 ops/s [Average]
  (min, avg, max) = (46.581, 50.061, 51.319), stdev = 1.600
  CI (99.9%): [47.641, 52.480] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 29.832 ops/s
# Warmup Iteration   2: 31.418 ops/s
# Warmup Iteration   3: 31.424 ops/s
# Warmup Iteration   4: 37.619 ops/s
# Warmup Iteration   5: 55.125 ops/s
Iteration   1: 54.998 ops/s
Iteration   2: 55.338 ops/s
Iteration   3: 55.533 ops/s
Iteration   4: 55.431 ops/s
Iteration   5: 55.676 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 29.966 ops/s
# Warmup Iteration   2: 31.431 ops/s
# Warmup Iteration   3: 31.360 ops/s
# Warmup Iteration   4: 36.749 ops/s
# Warmup Iteration   5: 55.470 ops/s
Iteration   1: 54.867 ops/s
Iteration   2: 55.956 ops/s
Iteration   3: 55.918 ops/s
Iteration   4: 56.169 ops/s
Iteration   5: 55.601 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  55.549 Å}(99.9%) 0.624 ops/s [Average]
  (min, avg, max) = (54.867, 55.549, 56.169), stdev = 0.413
  CI (99.9%): [54.925, 56.172] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 92.034 ops/s
# Warmup Iteration   2: 97.693 ops/s
# Warmup Iteration   3: 95.643 ops/s
# Warmup Iteration   4: 99.909 ops/s
# Warmup Iteration   5: 101.892 ops/s
Iteration   1: 103.527 ops/s
Iteration   2: 104.667 ops/s
Iteration   3: 104.150 ops/s
Iteration   4: 103.833 ops/s
Iteration   5: 103.904 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 92.746 ops/s
# Warmup Iteration   2: 100.740 ops/s
# Warmup Iteration   3: 99.238 ops/s
# Warmup Iteration   4: 103.882 ops/s
# Warmup Iteration   5: 104.489 ops/s
Iteration   1: 104.957 ops/s
Iteration   2: 104.975 ops/s
Iteration   3: 103.538 ops/s
Iteration   4: 104.870 ops/s
Iteration   5: 102.824 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  104.124 Å}(99.9%) 1.103 ops/s [Average]
  (min, avg, max) = (102.824, 104.124, 104.975), stdev = 0.730
  CI (99.9%): [103.021, 105.228] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  109.511 Å} 1.972  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10   50.061 Å} 2.419  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10   55.549 Å} 0.624  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10  104.124 Å} 1.103  ops/s
