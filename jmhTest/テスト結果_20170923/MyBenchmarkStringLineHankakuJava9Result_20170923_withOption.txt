# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 91.313 ops/s
# Warmup Iteration   2: 107.809 ops/s
# Warmup Iteration   3: 107.173 ops/s
# Warmup Iteration   4: 109.156 ops/s
# Warmup Iteration   5: 110.850 ops/s
Iteration   1: 110.619 ops/s
Iteration   2: 110.926 ops/s
Iteration   3: 108.562 ops/s
Iteration   4: 111.673 ops/s
Iteration   5: 110.510 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 92.541 ops/s
# Warmup Iteration   2: 105.756 ops/s
# Warmup Iteration   3: 106.568 ops/s
# Warmup Iteration   4: 108.774 ops/s
# Warmup Iteration   5: 108.635 ops/s
Iteration   1: 109.275 ops/s
Iteration   2: 105.411 ops/s
Iteration   3: 108.059 ops/s
Iteration   4: 102.791 ops/s
Iteration   5: 110.360 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call1StringLine":
  108.819 Å}(99.9%) 4.212 ops/s [Average]
  (min, avg, max) = (102.791, 108.819, 111.673), stdev = 2.786
  CI (99.9%): [104.606, 113.031] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 43.995 ops/s
# Warmup Iteration   2: 47.314 ops/s
# Warmup Iteration   3: 51.166 ops/s
# Warmup Iteration   4: 51.716 ops/s
# Warmup Iteration   5: 50.560 ops/s
Iteration   1: 50.693 ops/s
Iteration   2: 49.683 ops/s
Iteration   3: 50.055 ops/s
Iteration   4: 51.664 ops/s
Iteration   5: 51.690 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 44.473 ops/s
# Warmup Iteration   2: 47.150 ops/s
# Warmup Iteration   3: 51.199 ops/s
# Warmup Iteration   4: 50.702 ops/s
# Warmup Iteration   5: 50.745 ops/s
Iteration   1: 51.001 ops/s
Iteration   2: 50.518 ops/s
Iteration   3: 50.740 ops/s
Iteration   4: 51.107 ops/s
Iteration   5: 50.802 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat":
  50.795 Å}(99.9%) 0.952 ops/s [Average]
  (min, avg, max) = (49.683, 50.795, 51.690), stdev = 0.630
  CI (99.9%): [49.843, 51.747] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 30.150 ops/s
# Warmup Iteration   2: 31.581 ops/s
# Warmup Iteration   3: 31.373 ops/s
# Warmup Iteration   4: 37.783 ops/s
# Warmup Iteration   5: 56.158 ops/s
Iteration   1: 55.833 ops/s
Iteration   2: 56.338 ops/s
Iteration   3: 56.642 ops/s
Iteration   4: 55.319 ops/s
Iteration   5: 56.081 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 29.535 ops/s
# Warmup Iteration   2: 31.305 ops/s
# Warmup Iteration   3: 31.317 ops/s
# Warmup Iteration   4: 38.384 ops/s
# Warmup Iteration   5: 55.301 ops/s
Iteration   1: 56.283 ops/s
Iteration   2: 56.317 ops/s
Iteration   3: 56.162 ops/s
Iteration   4: 56.427 ops/s
Iteration   5: 55.868 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer":
  56.127 Å}(99.9%) 0.568 ops/s [Average]
  (min, avg, max) = (55.319, 56.127, 56.642), stdev = 0.376
  CI (99.9%): [55.559, 56.695] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 91.362 ops/s
# Warmup Iteration   2: 101.419 ops/s
# Warmup Iteration   3: 102.752 ops/s
# Warmup Iteration   4: 104.955 ops/s
# Warmup Iteration   5: 105.420 ops/s
Iteration   1: 103.950 ops/s
Iteration   2: 105.341 ops/s
Iteration   3: 105.786 ops/s
Iteration   4: 104.960 ops/s
Iteration   5: 104.847 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 92.582 ops/s
# Warmup Iteration   2: 101.488 ops/s
# Warmup Iteration   3: 103.397 ops/s
# Warmup Iteration   4: 104.094 ops/s
# Warmup Iteration   5: 105.366 ops/s
Iteration   1: 101.987 ops/s
Iteration   2: 103.809 ops/s
Iteration   3: 103.479 ops/s
Iteration   4: 103.936 ops/s
Iteration   5: 103.201 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder":
  104.129 Å}(99.9%) 1.707 ops/s [Average]
  (min, avg, max) = (101.987, 104.129, 105.786), stdev = 1.129
  CI (99.9%): [102.423, 105.836] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineHankaku.call1StringLine     thrpt   10  108.819 Å} 4.212  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat   thrpt   10   50.795 Å} 0.952  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer   thrpt   10   56.127 Å} 0.568  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder  thrpt   10  104.129 Å} 1.707  ops/s
