C:\Users\xxx\git\jmhTest\jmhTest>"C:\Program Files\Java\jdk-9\bin\java" -classpath target/benchmarks.jar jmhTest.MyBenchmarkStringLine
# JMH 1.13 (released 43 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLine.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 141.522 ops/s
# Warmup Iteration   2: 251.600 ops/s
# Warmup Iteration   3: 259.436 ops/s
# Warmup Iteration   4: 260.290 ops/s
# Warmup Iteration   5: 257.237 ops/s
Iteration   1: 259.886 ops/s
Iteration   2: 259.797 ops/s
Iteration   3: 259.734 ops/s
Iteration   4: 258.522 ops/s
Iteration   5: 260.494 ops/s

# Run progress: 12.50% complete, ETA 00:01:13
# Fork: 2 of 2
# Warmup Iteration   1: 135.896 ops/s
# Warmup Iteration   2: 263.024 ops/s
# Warmup Iteration   3: 263.129 ops/s
# Warmup Iteration   4: 262.469 ops/s
# Warmup Iteration   5: 265.762 ops/s
Iteration   1: 264.992 ops/s
Iteration   2: 264.973 ops/s
Iteration   3: 265.893 ops/s
Iteration   4: 266.009 ops/s
Iteration   5: 266.701 ops/s


Result "call1StringLine":
  262.700 Å}(99.9%) 4.913 ops/s [Average]
  (min, avg, max) = (258.522, 262.700, 266.701), stdev = 3.250
  CI (99.9%): [257.787, 267.613] (assumes normal distribution)


# JMH 1.13 (released 43 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLine.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 90.471 ops/s
# Warmup Iteration   2: 137.418 ops/s
# Warmup Iteration   3: 137.928 ops/s
# Warmup Iteration   4: 138.832 ops/s
# Warmup Iteration   5: 137.010 ops/s
Iteration   1: 135.583 ops/s
Iteration   2: 136.924 ops/s
Iteration   3: 137.150 ops/s
Iteration   4: 137.109 ops/s
Iteration   5: 137.161 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 90.827 ops/s
# Warmup Iteration   2: 137.955 ops/s
# Warmup Iteration   3: 137.517 ops/s
# Warmup Iteration   4: 135.909 ops/s
# Warmup Iteration   5: 134.313 ops/s
Iteration   1: 136.443 ops/s
Iteration   2: 135.823 ops/s
Iteration   3: 137.008 ops/s
Iteration   4: 136.931 ops/s
Iteration   5: 137.043 ops/s


Result "call2StringConcat":
  136.718 Å}(99.9%) 0.869 ops/s [Average]
  (min, avg, max) = (135.583, 136.718, 137.161), stdev = 0.575
  CI (99.9%): [135.848, 137.587] (assumes normal distribution)


# JMH 1.13 (released 43 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLine.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 40.704 ops/s
# Warmup Iteration   2: 50.919 ops/s
# Warmup Iteration   3: 52.069 ops/s
# Warmup Iteration   4: 52.526 ops/s
# Warmup Iteration   5: 53.050 ops/s
Iteration   1: 52.601 ops/s
Iteration   2: 52.692 ops/s
Iteration   3: 53.060 ops/s
Iteration   4: 53.083 ops/s
Iteration   5: 52.964 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 42.207 ops/s
# Warmup Iteration   2: 49.942 ops/s
# Warmup Iteration   3: 51.997 ops/s
# Warmup Iteration   4: 51.934 ops/s
# Warmup Iteration   5: 53.084 ops/s
Iteration   1: 52.984 ops/s
Iteration   2: 53.294 ops/s
Iteration   3: 53.216 ops/s
Iteration   4: 52.719 ops/s
Iteration   5: 52.389 ops/s


Result "call3StringBuffer":
  52.900 Å}(99.9%) 0.437 ops/s [Average]
  (min, avg, max) = (52.389, 52.900, 53.294), stdev = 0.289
  CI (99.9%): [52.463, 53.337] (assumes normal distribution)


# JMH 1.13 (released 43 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLine.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 43.634 ops/s
# Warmup Iteration   2: 55.342 ops/s
# Warmup Iteration   3: 57.085 ops/s
# Warmup Iteration   4: 56.462 ops/s
# Warmup Iteration   5: 56.405 ops/s
Iteration   1: 56.703 ops/s
Iteration   2: 57.578 ops/s
Iteration   3: 56.848 ops/s
Iteration   4: 57.015 ops/s
Iteration   5: 56.915 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 43.799 ops/s
# Warmup Iteration   2: 54.037 ops/s
# Warmup Iteration   3: 55.865 ops/s
# Warmup Iteration   4: 56.041 ops/s
# Warmup Iteration   5: 56.196 ops/s
Iteration   1: 55.822 ops/s
Iteration   2: 56.321 ops/s
Iteration   3: 57.191 ops/s
Iteration   4: 57.015 ops/s
Iteration   5: 57.119 ops/s


Result "call4StringBuilder":
  56.853 Å}(99.9%) 0.736 ops/s [Average]
  (min, avg, max) = (55.822, 56.853, 57.578), stdev = 0.487
  CI (99.9%): [56.116, 57.589] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                          Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLine.call1StringLine     thrpt   10  262.700 Å} 4.913  ops/s
jmhTest.MyBenchmarkStringLine.call2StringConcat   thrpt   10  136.718 Å} 0.869  ops/s
jmhTest.MyBenchmarkStringLine.call3StringBuffer   thrpt   10   52.900 Å} 0.437  ops/s
jmhTest.MyBenchmarkStringLine.call4StringBuilder  thrpt   10   56.853 Å} 0.736  ops/s

C:\Users\ÇΩÇæÇµ\git\jmhTest\jmhTest>