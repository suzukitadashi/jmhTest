# JMH 1.13 (released 46 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 75.200 ops/s
# Warmup Iteration   2: 88.483 ops/s
# Warmup Iteration   3: 88.936 ops/s
# Warmup Iteration   4: 90.499 ops/s
# Warmup Iteration   5: 88.452 ops/s
Iteration   1: 89.470 ops/s
Iteration   2: 93.390 ops/s
Iteration   3: 92.410 ops/s
Iteration   4: 92.063 ops/s
Iteration   5: 86.931 ops/s

# Run progress: 12.50% complete, ETA 00:01:13
# Fork: 2 of 2
# Warmup Iteration   1: 74.377 ops/s
# Warmup Iteration   2: 89.101 ops/s
# Warmup Iteration   3: 85.908 ops/s
# Warmup Iteration   4: 86.471 ops/s
# Warmup Iteration   5: 89.853 ops/s
Iteration   1: 88.348 ops/s
Iteration   2: 89.518 ops/s
Iteration   3: 89.369 ops/s
Iteration   4: 89.873 ops/s
Iteration   5: 90.497 ops/s


Result "call1StringLine":
  90.187 Å}(99.9%) 2.961 ops/s [Average]
  (min, avg, max) = (86.931, 90.187, 93.390), stdev = 1.959
  CI (99.9%): [87.226, 93.148] (assumes normal distribution)


# JMH 1.13 (released 46 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 41.575 ops/s
# Warmup Iteration   2: 43.536 ops/s
# Warmup Iteration   3: 46.502 ops/s
# Warmup Iteration   4: 48.106 ops/s
# Warmup Iteration   5: 47.798 ops/s
Iteration   1: 46.124 ops/s
Iteration   2: 46.741 ops/s
Iteration   3: 47.253 ops/s
Iteration   4: 47.414 ops/s
Iteration   5: 48.909 ops/s

# Run progress: 37.50% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 44.615 ops/s
# Warmup Iteration   2: 46.535 ops/s
# Warmup Iteration   3: 49.196 ops/s
# Warmup Iteration   4: 47.511 ops/s
# Warmup Iteration   5: 49.156 ops/s
Iteration   1: 48.794 ops/s
Iteration   2: 45.722 ops/s
Iteration   3: 45.069 ops/s
Iteration   4: 42.376 ops/s
Iteration   5: 49.816 ops/s


Result "call2StringConcat":
  46.822 Å}(99.9%) 3.277 ops/s [Average]
  (min, avg, max) = (42.376, 46.822, 49.816), stdev = 2.168
  CI (99.9%): [43.545, 50.099] (assumes normal distribution)


# JMH 1.13 (released 46 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 59.776 ops/s
# Warmup Iteration   2: 65.353 ops/s
# Warmup Iteration   3: 66.075 ops/s
# Warmup Iteration   4: 68.147 ops/s
# Warmup Iteration   5: 70.521 ops/s
Iteration   1: 70.380 ops/s
Iteration   2: 69.837 ops/s
Iteration   3: 69.823 ops/s
Iteration   4: 69.179 ops/s
Iteration   5: 70.080 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 61.941 ops/s
# Warmup Iteration   2: 65.221 ops/s
# Warmup Iteration   3: 66.400 ops/s
# Warmup Iteration   4: 68.612 ops/s
# Warmup Iteration   5: 70.609 ops/s
Iteration   1: 70.561 ops/s
Iteration   2: 69.487 ops/s
Iteration   3: 64.742 ops/s
Iteration   4: 66.681 ops/s
Iteration   5: 68.601 ops/s


Result "call3StringBuffer":
  68.937 Å}(99.9%) 2.796 ops/s [Average]
  (min, avg, max) = (64.742, 68.937, 70.561), stdev = 1.850
  CI (99.9%): [66.141, 71.733] (assumes normal distribution)


# JMH 1.13 (released 46 days ago)
# VM version: JDK 9-ea, VM 9-ea+134
# VM invoker: C:\Program Files\Java\jdk-9\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 73.525 ops/s
# Warmup Iteration   2: 76.208 ops/s
# Warmup Iteration   3: 77.637 ops/s
# Warmup Iteration   4: 79.639 ops/s
# Warmup Iteration   5: 79.572 ops/s
Iteration   1: 78.794 ops/s
Iteration   2: 73.854 ops/s
Iteration   3: 79.010 ops/s
Iteration   4: 79.897 ops/s
Iteration   5: 80.012 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 74.274 ops/s
# Warmup Iteration   2: 75.972 ops/s
# Warmup Iteration   3: 76.694 ops/s
# Warmup Iteration   4: 78.997 ops/s
# Warmup Iteration   5: 79.190 ops/s
Iteration   1: 78.997 ops/s
Iteration   2: 78.962 ops/s
Iteration   3: 79.254 ops/s
Iteration   4: 79.360 ops/s
Iteration   5: 79.277 ops/s


Result "call4StringBuilder":
  78.742 Å}(99.9%) 2.665 ops/s [Average]
  (min, avg, max) = (73.854, 78.742, 80.012), stdev = 1.762
  CI (99.9%): [76.077, 81.406] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt   Score   Error  Units
jmhTest.MyBenchmarkStringLineHankaku.call1StringLine     thrpt   10  90.187 Å} 2.961  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat   thrpt   10  46.822 Å} 3.277  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer   thrpt   10  68.937 Å} 2.796  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder  thrpt   10  78.742 Å} 2.665  ops/s
