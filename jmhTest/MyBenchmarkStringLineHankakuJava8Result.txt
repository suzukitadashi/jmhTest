# JMH 1.13 (released 46 days ago)
# VM version: JDK 1.8.0_102, VM 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 131.163 ops/s
# Warmup Iteration   2: 135.990 ops/s
# Warmup Iteration   3: 141.245 ops/s
# Warmup Iteration   4: 139.918 ops/s
# Warmup Iteration   5: 141.445 ops/s
Iteration   1: 141.558 ops/s
Iteration   2: 141.059 ops/s
Iteration   3: 141.234 ops/s
Iteration   4: 141.396 ops/s
Iteration   5: 141.409 ops/s

# Run progress: 12.50% complete, ETA 00:01:12
# Fork: 2 of 2
# Warmup Iteration   1: 132.712 ops/s
# Warmup Iteration   2: 136.674 ops/s
# Warmup Iteration   3: 141.017 ops/s
# Warmup Iteration   4: 139.537 ops/s
# Warmup Iteration   5: 140.719 ops/s
Iteration   1: 141.173 ops/s
Iteration   2: 140.758 ops/s
Iteration   3: 139.096 ops/s
Iteration   4: 140.620 ops/s
Iteration   5: 140.970 ops/s


Result "call1StringLine":
  140.927 Å}(99.9%) 1.069 ops/s [Average]
  (min, avg, max) = (139.096, 140.927, 141.558), stdev = 0.707
  CI (99.9%): [139.858, 141.996] (assumes normal distribution)


# JMH 1.13 (released 46 days ago)
# VM version: JDK 1.8.0_102, VM 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:02
# Fork: 1 of 2
# Warmup Iteration   1: 33.192 ops/s
# Warmup Iteration   2: 34.555 ops/s
# Warmup Iteration   3: 36.037 ops/s
# Warmup Iteration   4: 36.034 ops/s
# Warmup Iteration   5: 35.975 ops/s
Iteration   1: 36.045 ops/s
Iteration   2: 35.995 ops/s
Iteration   3: 35.966 ops/s
Iteration   4: 35.944 ops/s
Iteration   5: 35.888 ops/s

# Run progress: 37.50% complete, ETA 00:00:51
# Fork: 2 of 2
# Warmup Iteration   1: 33.009 ops/s
# Warmup Iteration   2: 34.349 ops/s
# Warmup Iteration   3: 35.612 ops/s
# Warmup Iteration   4: 35.692 ops/s
# Warmup Iteration   5: 35.508 ops/s
Iteration   1: 35.428 ops/s
Iteration   2: 35.249 ops/s
Iteration   3: 35.558 ops/s
Iteration   4: 35.518 ops/s
Iteration   5: 35.518 ops/s


Result "call2StringConcat":
  35.711 Å}(99.9%) 0.432 ops/s [Average]
  (min, avg, max) = (35.249, 35.711, 36.045), stdev = 0.286
  CI (99.9%): [35.279, 36.143] (assumes normal distribution)


# JMH 1.13 (released 46 days ago)
# VM version: JDK 1.8.0_102, VM 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:41
# Fork: 1 of 2
# Warmup Iteration   1: 87.047 ops/s
# Warmup Iteration   2: 93.046 ops/s
# Warmup Iteration   3: 97.314 ops/s
# Warmup Iteration   4: 96.927 ops/s
# Warmup Iteration   5: 96.990 ops/s
Iteration   1: 97.308 ops/s
Iteration   2: 97.476 ops/s
Iteration   3: 97.229 ops/s
Iteration   4: 97.092 ops/s
Iteration   5: 97.135 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 86.641 ops/s
# Warmup Iteration   2: 92.737 ops/s
# Warmup Iteration   3: 96.653 ops/s
# Warmup Iteration   4: 96.842 ops/s
# Warmup Iteration   5: 96.691 ops/s
Iteration   1: 96.596 ops/s
Iteration   2: 96.793 ops/s
Iteration   3: 96.789 ops/s
Iteration   4: 96.584 ops/s
Iteration   5: 96.616 ops/s


Result "call3StringBuffer":
  96.962 Å}(99.9%) 0.493 ops/s [Average]
  (min, avg, max) = (96.584, 96.962, 97.476), stdev = 0.326
  CI (99.9%): [96.469, 97.455] (assumes normal distribution)


# JMH 1.13 (released 46 days ago)
# VM version: JDK 1.8.0_102, VM 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:20
# Fork: 1 of 2
# Warmup Iteration   1: 89.642 ops/s
# Warmup Iteration   2: 95.344 ops/s
# Warmup Iteration   3: 99.582 ops/s
# Warmup Iteration   4: 99.357 ops/s
# Warmup Iteration   5: 99.429 ops/s
Iteration   1: 99.387 ops/s
Iteration   2: 99.882 ops/s
Iteration   3: 99.766 ops/s
Iteration   4: 99.378 ops/s
Iteration   5: 99.292 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 90.382 ops/s
# Warmup Iteration   2: 96.852 ops/s
# Warmup Iteration   3: 100.928 ops/s
# Warmup Iteration   4: 100.808 ops/s
# Warmup Iteration   5: 100.248 ops/s
Iteration   1: 100.733 ops/s
Iteration   2: 100.616 ops/s
Iteration   3: 97.237 ops/s
Iteration   4: 100.313 ops/s
Iteration   5: 100.524 ops/s


Result "call4StringBuilder":
  99.713 Å}(99.9%) 1.548 ops/s [Average]
  (min, avg, max) = (97.237, 99.713, 100.733), stdev = 1.024
  CI (99.9%): [98.165, 101.261] (assumes normal distribution)


# Run complete. Total time: 00:01:23

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineHankaku.call1StringLine     thrpt   10  140.927 Å} 1.069  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat   thrpt   10   35.711 Å} 0.432  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer   thrpt   10   96.962 Å} 0.493  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder  thrpt   10   99.713 Å} 1.548  ops/s
