# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 4.631 ops/s
# Warmup Iteration   2: 14.253 ops/s
# Warmup Iteration   3: 14.332 ops/s
# Warmup Iteration   4: 16.244 ops/s
# Warmup Iteration   5: 16.266 ops/s
Iteration   1: 14.774 ops/s
Iteration   2: 51.291 ops/s
Iteration   3: 55.237 ops/s
Iteration   4: 56.076 ops/s
Iteration   5: 53.265 ops/s

# Run progress: 12.50% complete, ETA 00:01:32
# Fork: 2 of 2
# Warmup Iteration   1: 17.363 ops/s
# Warmup Iteration   2: 15.090 ops/s
# Warmup Iteration   3: 12.722 ops/s
# Warmup Iteration   4: 10.858 ops/s
# Warmup Iteration   5: 9.940 ops/s
Iteration   1: 10.644 ops/s
Iteration   2: 7.727 ops/s
Iteration   3: 6.782 ops/s
Iteration   4: 10.838 ops/s
Iteration   5: 10.318 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call1StringLine":
  27.695 Å}(99.9%) 34.382 ops/s [Average]
  (min, avg, max) = (6.782, 27.695, 56.076), stdev = 22.741
  CI (99.9%): [? 0, 62.077] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:14
# Fork: 1 of 2
# Warmup Iteration   1: 3.662 ops/s
# Warmup Iteration   2: 6.166 ops/s
# Warmup Iteration   3: 6.799 ops/s
# Warmup Iteration   4: 6.578 ops/s
# Warmup Iteration   5: 5.316 ops/s
Iteration   1: 5.282 ops/s
Iteration   2: 7.428 ops/s
Iteration   3: 7.592 ops/s
Iteration   4: 6.170 ops/s
Iteration   5: 5.960 ops/s

# Run progress: 37.50% complete, ETA 00:01:04
# Fork: 2 of 2
# Warmup Iteration   1: 15.862 ops/s
# Warmup Iteration   2: 6.596 ops/s
# Warmup Iteration   3: 4.962 ops/s
# Warmup Iteration   4: 6.167 ops/s
# Warmup Iteration   5: 8.373 ops/s
Iteration   1: 8.319 ops/s
Iteration   2: 9.004 ops/s
Iteration   3: 9.132 ops/s
Iteration   4: 9.243 ops/s
Iteration   5: 9.785 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat":
  7.792 Å}(99.9%) 2.368 ops/s [Average]
  (min, avg, max) = (5.282, 7.792, 9.785), stdev = 1.566
  CI (99.9%): [5.424, 10.159] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:50
# Fork: 1 of 2
# Warmup Iteration   1: 12.076 ops/s
# Warmup Iteration   2: 13.454 ops/s
# Warmup Iteration   3: 12.926 ops/s
# Warmup Iteration   4: 14.085 ops/s
# Warmup Iteration   5: 13.583 ops/s
Iteration   1: 14.508 ops/s
Iteration   2: 13.733 ops/s
Iteration   3: 14.292 ops/s
Iteration   4: 13.475 ops/s
Iteration   5: 14.245 ops/s

# Run progress: 62.50% complete, ETA 00:00:37
# Fork: 2 of 2
# Warmup Iteration   1: 18.738 ops/s
# Warmup Iteration   2: 29.880 ops/s
# Warmup Iteration   3: 28.566 ops/s
# Warmup Iteration   4: 51.403 ops/s
# Warmup Iteration   5: 57.357 ops/s
Iteration   1: 55.116 ops/s
Iteration   2: 52.839 ops/s
Iteration   3: 55.555 ops/s
Iteration   4: 54.940 ops/s
Iteration   5: 54.277 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer":
  34.298 Å}(99.9%) 32.288 ops/s [Average]
  (min, avg, max) = (13.475, 34.298, 55.555), stdev = 21.356
  CI (99.9%): [2.010, 66.586] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 9, VM 9+181
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:24
# Fork: 1 of 2
# Warmup Iteration   1: 58.042 ops/s
# Warmup Iteration   2: 62.595 ops/s
# Warmup Iteration   3: 62.186 ops/s
# Warmup Iteration   4: 59.164 ops/s
# Warmup Iteration   5: 61.705 ops/s
Iteration   1: 66.611 ops/s
Iteration   2: 67.515 ops/s
Iteration   3: 67.423 ops/s
Iteration   4: 66.633 ops/s
Iteration   5: 60.797 ops/s

# Run progress: 87.50% complete, ETA 00:00:12
# Fork: 2 of 2
# Warmup Iteration   1: 57.010 ops/s
# Warmup Iteration   2: 61.852 ops/s
# Warmup Iteration   3: 61.396 ops/s
# Warmup Iteration   4: 66.575 ops/s
# Warmup Iteration   5: 68.576 ops/s
Iteration   1: 68.820 ops/s
Iteration   2: 65.535 ops/s
Iteration   3: 68.749 ops/s
Iteration   4: 62.201 ops/s
Iteration   5: 56.807 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder":
  65.109 Å}(99.9%) 5.939 ops/s [Average]
  (min, avg, max) = (56.807, 65.109, 68.820), stdev = 3.928
  CI (99.9%): [59.170, 71.048] (assumes normal distribution)


# Run complete. Total time: 00:01:35

Benchmark                                                 Mode  Cnt   Score    Error  Units
jmhTest.MyBenchmarkStringLineHankaku.call1StringLine     thrpt   10  27.695 Å} 34.382  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat   thrpt   10   7.792 Å}  2.368  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer   thrpt   10  34.298 Å} 32.288  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder  thrpt   10  65.109 Å}  5.939  ops/s
