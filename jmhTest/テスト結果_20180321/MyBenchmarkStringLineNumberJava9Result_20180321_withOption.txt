# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 144.521 ops/s
# Warmup Iteration   2: 252.145 ops/s
# Warmup Iteration   3: 254.646 ops/s
# Warmup Iteration   4: 254.298 ops/s
# Warmup Iteration   5: 252.552 ops/s
Iteration   1: 253.918 ops/s
Iteration   2: 254.151 ops/s
Iteration   3: 253.497 ops/s
Iteration   4: 254.582 ops/s
Iteration   5: 254.421 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 135.658 ops/s
# Warmup Iteration   2: 254.903 ops/s
# Warmup Iteration   3: 254.977 ops/s
# Warmup Iteration   4: 255.337 ops/s
# Warmup Iteration   5: 231.887 ops/s
Iteration   1: 248.444 ops/s
Iteration   2: 254.492 ops/s
Iteration   3: 254.250 ops/s
Iteration   4: 253.248 ops/s
Iteration   5: 254.804 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call1StringLine":
  253.581 Å}(99.9%) 2.825 ops/s [Average]
  (min, avg, max) = (248.444, 253.581, 254.804), stdev = 1.869
  CI (99.9%): [250.755, 256.406] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:04
# Fork: 1 of 2
# Warmup Iteration   1: 69.171 ops/s
# Warmup Iteration   2: 111.248 ops/s
# Warmup Iteration   3: 111.069 ops/s
# Warmup Iteration   4: 110.989 ops/s
# Warmup Iteration   5: 111.062 ops/s
Iteration   1: 111.412 ops/s
Iteration   2: 111.145 ops/s
Iteration   3: 111.323 ops/s
Iteration   4: 110.811 ops/s
Iteration   5: 111.156 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 72.741 ops/s
# Warmup Iteration   2: 111.427 ops/s
# Warmup Iteration   3: 112.014 ops/s
# Warmup Iteration   4: 111.897 ops/s
# Warmup Iteration   5: 111.595 ops/s
Iteration   1: 111.734 ops/s
Iteration   2: 112.037 ops/s
Iteration   3: 112.142 ops/s
Iteration   4: 112.158 ops/s
Iteration   5: 112.030 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call2StringConcat":
  111.595 Å}(99.9%) 0.736 ops/s [Average]
  (min, avg, max) = (110.811, 111.595, 112.158), stdev = 0.487
  CI (99.9%): [110.858, 112.331] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 23.528 ops/s
# Warmup Iteration   2: 25.844 ops/s
# Warmup Iteration   3: 27.439 ops/s
# Warmup Iteration   4: 31.617 ops/s
# Warmup Iteration   5: 41.873 ops/s
Iteration   1: 40.934 ops/s
Iteration   2: 42.456 ops/s
Iteration   3: 42.496 ops/s
Iteration   4: 42.160 ops/s
Iteration   5: 42.356 ops/s

# Run progress: 62.50% complete, ETA 00:00:32
# Fork: 2 of 2
# Warmup Iteration   1: 23.024 ops/s
# Warmup Iteration   2: 26.189 ops/s
# Warmup Iteration   3: 27.218 ops/s
# Warmup Iteration   4: 31.836 ops/s
# Warmup Iteration   5: 41.426 ops/s
Iteration   1: 41.531 ops/s
Iteration   2: 41.108 ops/s
Iteration   3: 41.550 ops/s
Iteration   4: 41.562 ops/s
Iteration   5: 41.415 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer":
  41.757 Å}(99.9%) 0.859 ops/s [Average]
  (min, avg, max) = (40.934, 41.757, 42.496), stdev = 0.568
  CI (99.9%): [40.898, 42.615] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 120.081 ops/s
# Warmup Iteration   2: 176.321 ops/s
# Warmup Iteration   3: 175.613 ops/s
# Warmup Iteration   4: 177.544 ops/s
# Warmup Iteration   5: 175.903 ops/s
Iteration   1: 176.297 ops/s
Iteration   2: 176.728 ops/s
Iteration   3: 177.553 ops/s
Iteration   4: 176.601 ops/s
Iteration   5: 176.501 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 117.860 ops/s
# Warmup Iteration   2: 180.979 ops/s
# Warmup Iteration   3: 180.678 ops/s
# Warmup Iteration   4: 181.321 ops/s
# Warmup Iteration   5: 180.549 ops/s
Iteration   1: 180.387 ops/s
Iteration   2: 179.762 ops/s
Iteration   3: 179.070 ops/s
Iteration   4: 181.401 ops/s
Iteration   5: 180.595 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder":
  178.490 Å}(99.9%) 2.972 ops/s [Average]
  (min, avg, max) = (176.297, 178.490, 181.401), stdev = 1.966
  CI (99.9%): [175.518, 181.461] (assumes normal distribution)


# Run complete. Total time: 00:01:25

Benchmark                                                Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineNumber.call1StringLine     thrpt   10  253.581 Å} 2.825  ops/s
jmhTest.MyBenchmarkStringLineNumber.call2StringConcat   thrpt   10  111.595 Å} 0.736  ops/s
jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer   thrpt   10   41.757 Å} 0.859  ops/s
jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder  thrpt   10  178.490 Å} 2.972  ops/s
