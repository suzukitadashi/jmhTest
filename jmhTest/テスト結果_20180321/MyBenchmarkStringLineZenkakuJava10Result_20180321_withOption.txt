# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 87.474 ops/s
# Warmup Iteration   2: 103.005 ops/s
# Warmup Iteration   3: 104.138 ops/s
# Warmup Iteration   4: 92.870 ops/s
# Warmup Iteration   5: 102.949 ops/s
Iteration   1: 108.470 ops/s
Iteration   2: 96.675 ops/s
Iteration   3: 92.794 ops/s
Iteration   4: 96.472 ops/s
Iteration   5: 102.740 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 86.428 ops/s
# Warmup Iteration   2: 104.507 ops/s
# Warmup Iteration   3: 102.680 ops/s
# Warmup Iteration   4: 104.646 ops/s
# Warmup Iteration   5: 107.157 ops/s
Iteration   1: 101.638 ops/s
Iteration   2: 104.775 ops/s
Iteration   3: 103.419 ops/s
Iteration   4: 105.757 ops/s
Iteration   5: 97.504 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  101.024 Å}(99.9%) 7.487 ops/s [Average]
  (min, avg, max) = (92.794, 101.024, 108.470), stdev = 4.952
  CI (99.9%): [93.537, 108.511] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 40.300 ops/s
# Warmup Iteration   2: 45.482 ops/s
# Warmup Iteration   3: 49.020 ops/s
# Warmup Iteration   4: 48.951 ops/s
# Warmup Iteration   5: 50.600 ops/s
Iteration   1: 50.381 ops/s
Iteration   2: 49.153 ops/s
Iteration   3: 50.394 ops/s
Iteration   4: 44.347 ops/s
Iteration   5: 50.472 ops/s

# Run progress: 37.50% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 42.843 ops/s
# Warmup Iteration   2: 45.449 ops/s
# Warmup Iteration   3: 48.249 ops/s
# Warmup Iteration   4: 49.715 ops/s
# Warmup Iteration   5: 51.556 ops/s
Iteration   1: 50.381 ops/s
Iteration   2: 51.517 ops/s
Iteration   3: 51.473 ops/s
Iteration   4: 49.467 ops/s
Iteration   5: 50.627 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  49.821 Å}(99.9%) 3.113 ops/s [Average]
  (min, avg, max) = (44.347, 49.821, 51.517), stdev = 2.059
  CI (99.9%): [46.708, 52.935] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 52.435 ops/s
# Warmup Iteration   2: 55.100 ops/s
# Warmup Iteration   3: 57.133 ops/s
# Warmup Iteration   4: 57.259 ops/s
# Warmup Iteration   5: 55.715 ops/s
Iteration   1: 55.071 ops/s
Iteration   2: 57.450 ops/s
Iteration   3: 55.630 ops/s
Iteration   4: 57.642 ops/s
Iteration   5: 57.760 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 50.343 ops/s
# Warmup Iteration   2: 55.313 ops/s
# Warmup Iteration   3: 56.093 ops/s
# Warmup Iteration   4: 55.915 ops/s
# Warmup Iteration   5: 57.356 ops/s
Iteration   1: 54.837 ops/s
Iteration   2: 53.108 ops/s
Iteration   3: 54.839 ops/s
Iteration   4: 56.487 ops/s
Iteration   5: 54.244 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  55.707 Å}(99.9%) 2.386 ops/s [Average]
  (min, avg, max) = (53.108, 55.707, 57.760), stdev = 1.578
  CI (99.9%): [53.320, 58.093] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 88.798 ops/s
# Warmup Iteration   2: 96.117 ops/s
# Warmup Iteration   3: 87.577 ops/s
# Warmup Iteration   4: 93.781 ops/s
# Warmup Iteration   5: 96.291 ops/s
Iteration   1: 100.723 ops/s
Iteration   2: 100.454 ops/s
Iteration   3: 100.666 ops/s
Iteration   4: 102.079 ops/s
Iteration   5: 100.992 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 90.506 ops/s
# Warmup Iteration   2: 98.867 ops/s
# Warmup Iteration   3: 98.303 ops/s
# Warmup Iteration   4: 96.142 ops/s
# Warmup Iteration   5: 93.829 ops/s
Iteration   1: 98.037 ops/s
Iteration   2: 99.768 ops/s
Iteration   3: 95.724 ops/s
Iteration   4: 93.738 ops/s
Iteration   5: 94.376 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  98.656 Å}(99.9%) 4.548 ops/s [Average]
  (min, avg, max) = (93.738, 98.656, 102.079), stdev = 3.008
  CI (99.9%): [94.108, 103.204] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  101.024 Å} 7.487  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10   49.821 Å} 3.113  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10   55.707 Å} 2.386  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10   98.656 Å} 4.548  ops/s
