# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 89.582 ops/s
# Warmup Iteration   2: 107.472 ops/s
# Warmup Iteration   3: 108.016 ops/s
# Warmup Iteration   4: 107.996 ops/s
# Warmup Iteration   5: 110.022 ops/s
Iteration   1: 110.301 ops/s
Iteration   2: 108.800 ops/s
Iteration   3: 108.132 ops/s
Iteration   4: 109.678 ops/s
Iteration   5: 108.347 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 92.717 ops/s
# Warmup Iteration   2: 106.253 ops/s
# Warmup Iteration   3: 106.072 ops/s
# Warmup Iteration   4: 105.885 ops/s
# Warmup Iteration   5: 107.553 ops/s
Iteration   1: 109.472 ops/s
Iteration   2: 110.548 ops/s
Iteration   3: 105.875 ops/s
Iteration   4: 108.484 ops/s
Iteration   5: 108.199 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  108.784 Å}(99.9%) 2.028 ops/s [Average]
  (min, avg, max) = (105.875, 108.784, 110.548), stdev = 1.342
  CI (99.9%): [106.755, 110.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 44.297 ops/s
# Warmup Iteration   2: 48.847 ops/s
# Warmup Iteration   3: 51.158 ops/s
# Warmup Iteration   4: 51.173 ops/s
# Warmup Iteration   5: 51.151 ops/s
Iteration   1: 49.998 ops/s
Iteration   2: 50.043 ops/s
Iteration   3: 50.720 ops/s
Iteration   4: 51.055 ops/s
Iteration   5: 50.989 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 45.269 ops/s
# Warmup Iteration   2: 49.093 ops/s
# Warmup Iteration   3: 51.795 ops/s
# Warmup Iteration   4: 51.839 ops/s
# Warmup Iteration   5: 51.788 ops/s
Iteration   1: 51.658 ops/s
Iteration   2: 51.856 ops/s
Iteration   3: 51.758 ops/s
Iteration   4: 51.900 ops/s
Iteration   5: 51.863 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  51.184 Å}(99.9%) 1.122 ops/s [Average]
  (min, avg, max) = (49.998, 51.184, 51.900), stdev = 0.742
  CI (99.9%): [50.062, 52.306] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 53.024 ops/s
# Warmup Iteration   2: 55.310 ops/s
# Warmup Iteration   3: 57.227 ops/s
# Warmup Iteration   4: 58.362 ops/s
# Warmup Iteration   5: 57.968 ops/s
Iteration   1: 58.182 ops/s
Iteration   2: 58.370 ops/s
Iteration   3: 58.231 ops/s
Iteration   4: 58.272 ops/s
Iteration   5: 58.305 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 52.048 ops/s
# Warmup Iteration   2: 55.965 ops/s
# Warmup Iteration   3: 57.072 ops/s
# Warmup Iteration   4: 58.081 ops/s
# Warmup Iteration   5: 58.254 ops/s
Iteration   1: 58.460 ops/s
Iteration   2: 58.407 ops/s
Iteration   3: 58.262 ops/s
Iteration   4: 58.392 ops/s
Iteration   5: 58.391 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  58.327 Å}(99.9%) 0.135 ops/s [Average]
  (min, avg, max) = (58.182, 58.327, 58.460), stdev = 0.089
  CI (99.9%): [58.192, 58.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 89.503 ops/s
# Warmup Iteration   2: 96.395 ops/s
# Warmup Iteration   3: 98.738 ops/s
# Warmup Iteration   4: 100.385 ops/s
# Warmup Iteration   5: 100.342 ops/s
Iteration   1: 100.480 ops/s
Iteration   2: 100.472 ops/s
Iteration   3: 100.299 ops/s
Iteration   4: 100.385 ops/s
Iteration   5: 100.064 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 93.168 ops/s
# Warmup Iteration   2: 101.194 ops/s
# Warmup Iteration   3: 103.369 ops/s
# Warmup Iteration   4: 105.552 ops/s
# Warmup Iteration   5: 104.842 ops/s
Iteration   1: 104.833 ops/s
Iteration   2: 105.350 ops/s
Iteration   3: 105.361 ops/s
Iteration   4: 105.557 ops/s
Iteration   5: 105.492 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  102.829 Å}(99.9%) 3.981 ops/s [Average]
  (min, avg, max) = (100.064, 102.829, 105.557), stdev = 2.633
  CI (99.9%): [98.848, 106.810] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  108.784 Å} 2.028  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10   51.184 Å} 1.122  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10   58.327 Å} 0.135  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10  102.829 Å} 3.981  ops/s
