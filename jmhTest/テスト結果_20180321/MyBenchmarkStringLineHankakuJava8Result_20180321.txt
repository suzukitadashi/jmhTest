# JMH version: 1.20
# VM version: JDK 1.8.0_162, VM 25.162-b12
# VM invoker: C:\Program Files\Java\latest\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 132.019 ops/s
# Warmup Iteration   2: 134.089 ops/s
# Warmup Iteration   3: 141.452 ops/s
# Warmup Iteration   4: 139.582 ops/s
# Warmup Iteration   5: 141.319 ops/s
Iteration   1: 141.398 ops/s
Iteration   2: 141.563 ops/s
Iteration   3: 141.215 ops/s
Iteration   4: 138.705 ops/s
Iteration   5: 138.875 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 130.240 ops/s
# Warmup Iteration   2: 132.653 ops/s
# Warmup Iteration   3: 135.525 ops/s
# Warmup Iteration   4: 138.556 ops/s
# Warmup Iteration   5: 139.647 ops/s
Iteration   1: 140.486 ops/s
Iteration   2: 138.722 ops/s
Iteration   3: 137.875 ops/s
Iteration   4: 141.285 ops/s
Iteration   5: 139.494 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call1StringLine":
  139.962 Å}(99.9%) 2.084 ops/s [Average]
  (min, avg, max) = (137.875, 139.962, 141.563), stdev = 1.378
  CI (99.9%): [137.878, 142.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_162, VM 25.162-b12
# VM invoker: C:\Program Files\Java\latest\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 33.064 ops/s
# Warmup Iteration   2: 34.972 ops/s
# Warmup Iteration   3: 36.800 ops/s
# Warmup Iteration   4: 36.841 ops/s
# Warmup Iteration   5: 36.914 ops/s
Iteration   1: 36.861 ops/s
Iteration   2: 36.923 ops/s
Iteration   3: 36.836 ops/s
Iteration   4: 36.784 ops/s
Iteration   5: 36.585 ops/s

# Run progress: 37.50% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 33.663 ops/s
# Warmup Iteration   2: 35.466 ops/s
# Warmup Iteration   3: 36.761 ops/s
# Warmup Iteration   4: 36.780 ops/s
# Warmup Iteration   5: 36.736 ops/s
Iteration   1: 36.545 ops/s
Iteration   2: 36.781 ops/s
Iteration   3: 36.754 ops/s
Iteration   4: 36.622 ops/s
Iteration   5: 36.539 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat":
  36.723 Å}(99.9%) 0.210 ops/s [Average]
  (min, avg, max) = (36.539, 36.723, 36.923), stdev = 0.139
  CI (99.9%): [36.513, 36.933] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_162, VM 25.162-b12
# VM invoker: C:\Program Files\Java\latest\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 86.734 ops/s
# Warmup Iteration   2: 93.810 ops/s
# Warmup Iteration   3: 98.317 ops/s
# Warmup Iteration   4: 98.420 ops/s
# Warmup Iteration   5: 98.083 ops/s
Iteration   1: 97.880 ops/s
Iteration   2: 98.011 ops/s
Iteration   3: 97.364 ops/s
Iteration   4: 97.713 ops/s
Iteration   5: 97.794 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 88.785 ops/s
# Warmup Iteration   2: 97.734 ops/s
# Warmup Iteration   3: 101.851 ops/s
# Warmup Iteration   4: 101.853 ops/s
# Warmup Iteration   5: 101.806 ops/s
Iteration   1: 101.484 ops/s
Iteration   2: 101.813 ops/s
Iteration   3: 101.799 ops/s
Iteration   4: 101.866 ops/s
Iteration   5: 101.298 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer":
  99.702 Å}(99.9%) 3.127 ops/s [Average]
  (min, avg, max) = (97.364, 99.702, 101.866), stdev = 2.068
  CI (99.9%): [96.575, 102.829] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_162, VM 25.162-b12
# VM invoker: C:\Program Files\Java\latest\jre\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 90.324 ops/s
# Warmup Iteration   2: 97.862 ops/s
# Warmup Iteration   3: 101.801 ops/s
# Warmup Iteration   4: 100.051 ops/s
# Warmup Iteration   5: 101.613 ops/s
Iteration   1: 101.497 ops/s
Iteration   2: 101.374 ops/s
Iteration   3: 101.173 ops/s
Iteration   4: 100.881 ops/s
Iteration   5: 100.693 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 89.560 ops/s
# Warmup Iteration   2: 97.320 ops/s
# Warmup Iteration   3: 101.291 ops/s
# Warmup Iteration   4: 100.870 ops/s
# Warmup Iteration   5: 101.019 ops/s
Iteration   1: 100.850 ops/s
Iteration   2: 100.928 ops/s
Iteration   3: 100.930 ops/s
Iteration   4: 99.442 ops/s
Iteration   5: 100.648 ops/s


Result "jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder":
  100.841 Å}(99.9%) 0.852 ops/s [Average]
  (min, avg, max) = (99.442, 100.841, 101.497), stdev = 0.563
  CI (99.9%): [99.990, 101.693] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineHankaku.call1StringLine     thrpt   10  139.962 Å} 2.084  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call2StringConcat   thrpt   10   36.723 Å} 0.210  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call3StringBuffer   thrpt   10   99.702 Å} 3.127  ops/s
jmhTest.MyBenchmarkStringLineHankaku.call4StringBuilder  thrpt   10  100.841 Å} 0.852  ops/s
