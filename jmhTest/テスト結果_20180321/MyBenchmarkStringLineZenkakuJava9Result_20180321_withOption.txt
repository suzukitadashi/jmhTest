# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 91.186 ops/s
# Warmup Iteration   2: 107.297 ops/s
# Warmup Iteration   3: 109.365 ops/s
# Warmup Iteration   4: 109.835 ops/s
# Warmup Iteration   5: 110.920 ops/s
Iteration   1: 112.388 ops/s
Iteration   2: 112.560 ops/s
Iteration   3: 111.656 ops/s
Iteration   4: 112.325 ops/s
Iteration   5: 112.208 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 89.678 ops/s
# Warmup Iteration   2: 108.763 ops/s
# Warmup Iteration   3: 108.774 ops/s
# Warmup Iteration   4: 110.449 ops/s
# Warmup Iteration   5: 111.817 ops/s
Iteration   1: 112.067 ops/s
Iteration   2: 112.193 ops/s
Iteration   3: 112.159 ops/s
Iteration   4: 112.073 ops/s
Iteration   5: 111.923 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  112.155 Å}(99.9%) 0.380 ops/s [Average]
  (min, avg, max) = (111.656, 112.155, 112.560), stdev = 0.252
  CI (99.9%): [111.775, 112.535] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 44.859 ops/s
# Warmup Iteration   2: 49.236 ops/s
# Warmup Iteration   3: 51.665 ops/s
# Warmup Iteration   4: 51.648 ops/s
# Warmup Iteration   5: 51.696 ops/s
Iteration   1: 51.609 ops/s
Iteration   2: 51.683 ops/s
Iteration   3: 51.573 ops/s
Iteration   4: 51.526 ops/s
Iteration   5: 51.567 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 45.239 ops/s
# Warmup Iteration   2: 49.228 ops/s
# Warmup Iteration   3: 51.707 ops/s
# Warmup Iteration   4: 51.761 ops/s
# Warmup Iteration   5: 51.853 ops/s
Iteration   1: 51.681 ops/s
Iteration   2: 51.579 ops/s
Iteration   3: 51.645 ops/s
Iteration   4: 51.857 ops/s
Iteration   5: 51.757 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  51.648 Å}(99.9%) 0.152 ops/s [Average]
  (min, avg, max) = (51.526, 51.648, 51.857), stdev = 0.101
  CI (99.9%): [51.495, 51.800] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 29.948 ops/s
# Warmup Iteration   2: 31.456 ops/s
# Warmup Iteration   3: 31.143 ops/s
# Warmup Iteration   4: 38.546 ops/s
# Warmup Iteration   5: 57.076 ops/s
Iteration   1: 57.222 ops/s
Iteration   2: 57.247 ops/s
Iteration   3: 57.027 ops/s
Iteration   4: 57.180 ops/s
Iteration   5: 57.137 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 30.262 ops/s
# Warmup Iteration   2: 31.647 ops/s
# Warmup Iteration   3: 31.860 ops/s
# Warmup Iteration   4: 38.564 ops/s
# Warmup Iteration   5: 57.077 ops/s
Iteration   1: 57.001 ops/s
Iteration   2: 57.017 ops/s
Iteration   3: 56.981 ops/s
Iteration   4: 57.113 ops/s
Iteration   5: 57.057 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  57.098 Å}(99.9%) 0.145 ops/s [Average]
  (min, avg, max) = (56.981, 57.098, 57.247), stdev = 0.096
  CI (99.9%): [56.953, 57.243] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 93.040 ops/s
# Warmup Iteration   2: 102.705 ops/s
# Warmup Iteration   3: 104.711 ops/s
# Warmup Iteration   4: 106.090 ops/s
# Warmup Iteration   5: 106.205 ops/s
Iteration   1: 106.167 ops/s
Iteration   2: 106.493 ops/s
Iteration   3: 106.587 ops/s
Iteration   4: 106.659 ops/s
Iteration   5: 106.028 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 92.414 ops/s
# Warmup Iteration   2: 102.235 ops/s
# Warmup Iteration   3: 104.007 ops/s
# Warmup Iteration   4: 107.022 ops/s
# Warmup Iteration   5: 106.773 ops/s
Iteration   1: 107.015 ops/s
Iteration   2: 107.033 ops/s
Iteration   3: 106.943 ops/s
Iteration   4: 107.080 ops/s
Iteration   5: 106.502 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  106.651 Å}(99.9%) 0.557 ops/s [Average]
  (min, avg, max) = (106.028, 106.651, 107.080), stdev = 0.368
  CI (99.9%): [106.094, 107.208] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  112.155 Å} 0.380  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10   51.648 Å} 0.152  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10   57.098 Å} 0.145  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10  106.651 Å} 0.557  ops/s
