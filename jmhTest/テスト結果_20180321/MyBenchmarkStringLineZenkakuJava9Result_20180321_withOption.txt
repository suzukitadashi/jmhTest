# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 95.028 ops/s
# Warmup Iteration   2: 107.688 ops/s
# Warmup Iteration   3: 107.996 ops/s
# Warmup Iteration   4: 108.310 ops/s
# Warmup Iteration   5: 110.001 ops/s
Iteration   1: 109.746 ops/s
Iteration   2: 110.159 ops/s
Iteration   3: 109.677 ops/s
Iteration   4: 110.085 ops/s
Iteration   5: 110.036 ops/s

# Run progress: 12.50% complete, ETA 00:01:13
# Fork: 2 of 2
# Warmup Iteration   1: 94.341 ops/s
# Warmup Iteration   2: 108.283 ops/s
# Warmup Iteration   3: 109.220 ops/s
# Warmup Iteration   4: 107.892 ops/s
# Warmup Iteration   5: 106.618 ops/s
Iteration   1: 106.931 ops/s
Iteration   2: 108.873 ops/s
Iteration   3: 107.948 ops/s
Iteration   4: 107.173 ops/s
Iteration   5: 107.903 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  108.853 Å}(99.9%) 1.908 ops/s [Average]
  (min, avg, max) = (106.931, 108.853, 110.159), stdev = 1.262
  CI (99.9%): [106.945, 110.761] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 44.750 ops/s
# Warmup Iteration   2: 47.679 ops/s
# Warmup Iteration   3: 50.397 ops/s
# Warmup Iteration   4: 51.535 ops/s
# Warmup Iteration   5: 51.234 ops/s
Iteration   1: 51.265 ops/s
Iteration   2: 51.278 ops/s
Iteration   3: 51.369 ops/s
Iteration   4: 51.232 ops/s
Iteration   5: 50.769 ops/s

# Run progress: 37.50% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 44.698 ops/s
# Warmup Iteration   2: 48.745 ops/s
# Warmup Iteration   3: 50.671 ops/s
# Warmup Iteration   4: 50.088 ops/s
# Warmup Iteration   5: 51.177 ops/s
Iteration   1: 50.846 ops/s
Iteration   2: 50.542 ops/s
Iteration   3: 50.838 ops/s
Iteration   4: 50.604 ops/s
Iteration   5: 50.715 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  50.946 Å}(99.9%) 0.467 ops/s [Average]
  (min, avg, max) = (50.542, 50.946, 51.369), stdev = 0.309
  CI (99.9%): [50.479, 51.413] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 86.428 ops/s
# Warmup Iteration   2: 94.292 ops/s
# Warmup Iteration   3: 102.228 ops/s
# Warmup Iteration   4: 101.808 ops/s
# Warmup Iteration   5: 101.648 ops/s
Iteration   1: 100.876 ops/s
Iteration   2: 102.449 ops/s
Iteration   3: 101.817 ops/s
Iteration   4: 101.892 ops/s
Iteration   5: 102.092 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 29.617 ops/s
# Warmup Iteration   2: 31.152 ops/s
# Warmup Iteration   3: 31.130 ops/s
# Warmup Iteration   4: 38.665 ops/s
# Warmup Iteration   5: 55.796 ops/s
Iteration   1: 55.518 ops/s
Iteration   2: 55.830 ops/s
Iteration   3: 55.703 ops/s
Iteration   4: 55.784 ops/s
Iteration   5: 55.449 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  78.741 Å}(99.9%) 36.793 ops/s [Average]
  (min, avg, max) = (55.449, 78.741, 102.449), stdev = 24.336
  CI (99.9%): [41.948, 115.534] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: -XX:-CompactStrings -DCompactStringEnabled=false
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 92.546 ops/s
# Warmup Iteration   2: 102.117 ops/s
# Warmup Iteration   3: 101.370 ops/s
# Warmup Iteration   4: 104.557 ops/s
# Warmup Iteration   5: 104.584 ops/s
Iteration   1: 104.959 ops/s
Iteration   2: 104.746 ops/s
Iteration   3: 104.847 ops/s
Iteration   4: 105.000 ops/s
Iteration   5: 104.278 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 93.662 ops/s
# Warmup Iteration   2: 102.345 ops/s
# Warmup Iteration   3: 103.046 ops/s
# Warmup Iteration   4: 106.350 ops/s
# Warmup Iteration   5: 105.544 ops/s
Iteration   1: 105.372 ops/s
Iteration   2: 105.578 ops/s
Iteration   3: 106.348 ops/s
Iteration   4: 106.078 ops/s
Iteration   5: 106.197 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  105.340 Å}(99.9%) 1.050 ops/s [Average]
  (min, avg, max) = (104.278, 105.340, 106.348), stdev = 0.694
  CI (99.9%): [104.291, 106.390] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt    Score    Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  108.853 Å}  1.908  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10   50.946 Å}  0.467  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10   78.741 Å} 36.793  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10  105.340 Å}  1.050  ops/s
