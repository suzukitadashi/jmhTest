# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 146.703 ops/s
# Warmup Iteration   2: 261.871 ops/s
# Warmup Iteration   3: 264.783 ops/s
# Warmup Iteration   4: 267.260 ops/s
# Warmup Iteration   5: 266.838 ops/s
Iteration   1: 265.588 ops/s
Iteration   2: 265.113 ops/s
Iteration   3: 265.076 ops/s
Iteration   4: 264.364 ops/s
Iteration   5: 265.415 ops/s

# Run progress: 12.50% complete, ETA 00:01:13
# Fork: 2 of 2
# Warmup Iteration   1: 139.753 ops/s
# Warmup Iteration   2: 270.855 ops/s
# Warmup Iteration   3: 268.702 ops/s
# Warmup Iteration   4: 269.041 ops/s
# Warmup Iteration   5: 267.410 ops/s
Iteration   1: 265.709 ops/s
Iteration   2: 248.999 ops/s
Iteration   3: 268.590 ops/s
Iteration   4: 268.983 ops/s
Iteration   5: 272.545 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call1StringLine":
  265.038 Å}(99.9%) 9.335 ops/s [Average]
  (min, avg, max) = (248.999, 265.038, 272.545), stdev = 6.175
  CI (99.9%): [255.703, 274.374] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 83.778 ops/s
# Warmup Iteration   2: 132.863 ops/s
# Warmup Iteration   3: 133.098 ops/s
# Warmup Iteration   4: 134.174 ops/s
# Warmup Iteration   5: 133.449 ops/s
Iteration   1: 133.586 ops/s
Iteration   2: 133.762 ops/s
Iteration   3: 134.181 ops/s
Iteration   4: 130.328 ops/s
Iteration   5: 133.523 ops/s

# Run progress: 37.50% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 83.563 ops/s
# Warmup Iteration   2: 132.288 ops/s
# Warmup Iteration   3: 132.545 ops/s
# Warmup Iteration   4: 131.372 ops/s
# Warmup Iteration   5: 128.445 ops/s
Iteration   1: 129.432 ops/s
Iteration   2: 131.885 ops/s
Iteration   3: 131.887 ops/s
Iteration   4: 130.655 ops/s
Iteration   5: 131.979 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call2StringConcat":
  132.122 Å}(99.9%) 2.457 ops/s [Average]
  (min, avg, max) = (129.432, 132.122, 134.181), stdev = 1.625
  CI (99.9%): [129.665, 134.579] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 36.691 ops/s
# Warmup Iteration   2: 45.281 ops/s
# Warmup Iteration   3: 46.791 ops/s
# Warmup Iteration   4: 47.413 ops/s
# Warmup Iteration   5: 48.253 ops/s
Iteration   1: 47.746 ops/s
Iteration   2: 47.659 ops/s
Iteration   3: 47.542 ops/s
Iteration   4: 47.745 ops/s
Iteration   5: 47.590 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 36.735 ops/s
# Warmup Iteration   2: 45.184 ops/s
# Warmup Iteration   3: 47.089 ops/s
# Warmup Iteration   4: 47.852 ops/s
# Warmup Iteration   5: 48.315 ops/s
Iteration   1: 48.309 ops/s
Iteration   2: 48.440 ops/s
Iteration   3: 48.572 ops/s
Iteration   4: 48.325 ops/s
Iteration   5: 47.730 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer":
  47.966 Å}(99.9%) 0.598 ops/s [Average]
  (min, avg, max) = (47.542, 47.966, 48.572), stdev = 0.395
  CI (99.9%): [47.368, 48.563] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 40.182 ops/s
# Warmup Iteration   2: 50.253 ops/s
# Warmup Iteration   3: 51.723 ops/s
# Warmup Iteration   4: 51.423 ops/s
# Warmup Iteration   5: 51.731 ops/s
Iteration   1: 51.552 ops/s
Iteration   2: 51.642 ops/s
Iteration   3: 51.447 ops/s
Iteration   4: 51.492 ops/s
Iteration   5: 51.546 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 39.713 ops/s
# Warmup Iteration   2: 47.906 ops/s
# Warmup Iteration   3: 50.553 ops/s
# Warmup Iteration   4: 49.289 ops/s
# Warmup Iteration   5: 50.660 ops/s
Iteration   1: 51.171 ops/s
Iteration   2: 51.309 ops/s
Iteration   3: 51.669 ops/s
Iteration   4: 52.033 ops/s
Iteration   5: 51.787 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder":
  51.565 Å}(99.9%) 0.366 ops/s [Average]
  (min, avg, max) = (51.171, 51.565, 52.033), stdev = 0.242
  CI (99.9%): [51.199, 51.930] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineNumber.call1StringLine     thrpt   10  265.038 Å} 9.335  ops/s
jmhTest.MyBenchmarkStringLineNumber.call2StringConcat   thrpt   10  132.122 Å} 2.457  ops/s
jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer   thrpt   10   47.966 Å} 0.598  ops/s
jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder  thrpt   10   51.565 Å} 0.366  ops/s
