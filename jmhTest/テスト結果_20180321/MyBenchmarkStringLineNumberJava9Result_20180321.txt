# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 123.726 ops/s
# Warmup Iteration   2: 269.486 ops/s
# Warmup Iteration   3: 271.087 ops/s
# Warmup Iteration   4: 271.116 ops/s
# Warmup Iteration   5: 270.206 ops/s
Iteration   1: 271.257 ops/s
Iteration   2: 271.034 ops/s
Iteration   3: 271.005 ops/s
Iteration   4: 270.355 ops/s
Iteration   5: 271.379 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 141.802 ops/s
# Warmup Iteration   2: 270.912 ops/s
# Warmup Iteration   3: 271.565 ops/s
# Warmup Iteration   4: 270.927 ops/s
# Warmup Iteration   5: 270.588 ops/s
Iteration   1: 270.857 ops/s
Iteration   2: 271.356 ops/s
Iteration   3: 271.071 ops/s
Iteration   4: 271.912 ops/s
Iteration   5: 271.442 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call1StringLine":
  271.167 Å}(99.9%) 0.623 ops/s [Average]
  (min, avg, max) = (270.355, 271.167, 271.912), stdev = 0.412
  CI (99.9%): [270.544, 271.790] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:04
# Fork: 1 of 2
# Warmup Iteration   1: 85.810 ops/s
# Warmup Iteration   2: 130.733 ops/s
# Warmup Iteration   3: 130.530 ops/s
# Warmup Iteration   4: 129.478 ops/s
# Warmup Iteration   5: 129.248 ops/s
Iteration   1: 129.302 ops/s
Iteration   2: 129.355 ops/s
Iteration   3: 133.723 ops/s
Iteration   4: 129.913 ops/s
Iteration   5: 130.879 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 83.489 ops/s
# Warmup Iteration   2: 130.615 ops/s
# Warmup Iteration   3: 128.886 ops/s
# Warmup Iteration   4: 130.011 ops/s
# Warmup Iteration   5: 129.447 ops/s
Iteration   1: 128.995 ops/s
Iteration   2: 129.257 ops/s
Iteration   3: 129.434 ops/s
Iteration   4: 129.342 ops/s
Iteration   5: 129.257 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call2StringConcat":
  129.946 Å}(99.9%) 2.161 ops/s [Average]
  (min, avg, max) = (128.995, 129.946, 133.723), stdev = 1.429
  CI (99.9%): [127.785, 132.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 37.609 ops/s
# Warmup Iteration   2: 44.995 ops/s
# Warmup Iteration   3: 47.986 ops/s
# Warmup Iteration   4: 48.143 ops/s
# Warmup Iteration   5: 48.774 ops/s
Iteration   1: 48.637 ops/s
Iteration   2: 48.327 ops/s
Iteration   3: 48.373 ops/s
Iteration   4: 48.531 ops/s
Iteration   5: 48.818 ops/s

# Run progress: 62.50% complete, ETA 00:00:32
# Fork: 2 of 2
# Warmup Iteration   1: 37.142 ops/s
# Warmup Iteration   2: 45.849 ops/s
# Warmup Iteration   3: 48.038 ops/s
# Warmup Iteration   4: 48.371 ops/s
# Warmup Iteration   5: 48.836 ops/s
Iteration   1: 48.927 ops/s
Iteration   2: 48.519 ops/s
Iteration   3: 48.704 ops/s
Iteration   4: 48.708 ops/s
Iteration   5: 48.871 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer":
  48.642 Å}(99.9%) 0.307 ops/s [Average]
  (min, avg, max) = (48.327, 48.642, 48.927), stdev = 0.203
  CI (99.9%): [48.335, 48.949] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 40.720 ops/s
# Warmup Iteration   2: 50.350 ops/s
# Warmup Iteration   3: 52.502 ops/s
# Warmup Iteration   4: 52.657 ops/s
# Warmup Iteration   5: 52.617 ops/s
Iteration   1: 52.688 ops/s
Iteration   2: 52.580 ops/s
Iteration   3: 52.560 ops/s
Iteration   4: 52.697 ops/s
Iteration   5: 52.166 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 40.384 ops/s
# Warmup Iteration   2: 50.989 ops/s
# Warmup Iteration   3: 52.179 ops/s
# Warmup Iteration   4: 52.272 ops/s
# Warmup Iteration   5: 52.061 ops/s
Iteration   1: 52.050 ops/s
Iteration   2: 52.085 ops/s
Iteration   3: 52.131 ops/s
Iteration   4: 52.374 ops/s
Iteration   5: 52.407 ops/s


Result "jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder":
  52.374 Å}(99.9%) 0.381 ops/s [Average]
  (min, avg, max) = (52.050, 52.374, 52.697), stdev = 0.252
  CI (99.9%): [51.993, 52.755] (assumes normal distribution)


# Run complete. Total time: 00:01:25

Benchmark                                                Mode  Cnt    Score   Error  Units
jmhTest.MyBenchmarkStringLineNumber.call1StringLine     thrpt   10  271.167 Å} 0.623  ops/s
jmhTest.MyBenchmarkStringLineNumber.call2StringConcat   thrpt   10  129.946 Å} 2.161  ops/s
jmhTest.MyBenchmarkStringLineNumber.call3StringBuffer   thrpt   10   48.642 Å} 0.307  ops/s
jmhTest.MyBenchmarkStringLineNumber.call4StringBuilder  thrpt   10   52.374 Å} 0.381  ops/s
