# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 77.383 ops/s
# Warmup Iteration   2: 90.926 ops/s
# Warmup Iteration   3: 86.655 ops/s
# Warmup Iteration   4: 89.897 ops/s
# Warmup Iteration   5: 91.453 ops/s
Iteration   1: 89.251 ops/s
Iteration   2: 92.178 ops/s
Iteration   3: 93.378 ops/s
Iteration   4: 93.280 ops/s
Iteration   5: 93.133 ops/s

# Run progress: 12.50% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 78.317 ops/s
# Warmup Iteration   2: 90.983 ops/s
# Warmup Iteration   3: 90.860 ops/s
# Warmup Iteration   4: 90.780 ops/s
# Warmup Iteration   5: 92.319 ops/s
Iteration   1: 92.751 ops/s
Iteration   2: 93.113 ops/s
Iteration   3: 93.365 ops/s
Iteration   4: 93.169 ops/s
Iteration   5: 93.110 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  92.673 Å}(99.9%) 1.896 ops/s [Average]
  (min, avg, max) = (89.251, 92.673, 93.378), stdev = 1.254
  CI (99.9%): [90.777, 94.569] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 42.906 ops/s
# Warmup Iteration   2: 44.795 ops/s
# Warmup Iteration   3: 47.958 ops/s
# Warmup Iteration   4: 47.962 ops/s
# Warmup Iteration   5: 47.979 ops/s
Iteration   1: 48.023 ops/s
Iteration   2: 48.107 ops/s
Iteration   3: 48.039 ops/s
Iteration   4: 47.817 ops/s
Iteration   5: 47.930 ops/s

# Run progress: 37.50% complete, ETA 00:00:53
# Fork: 2 of 2
# Warmup Iteration   1: 43.230 ops/s
# Warmup Iteration   2: 46.288 ops/s
# Warmup Iteration   3: 48.863 ops/s
# Warmup Iteration   4: 47.986 ops/s
# Warmup Iteration   5: 48.803 ops/s
Iteration   1: 48.861 ops/s
Iteration   2: 48.762 ops/s
Iteration   3: 48.859 ops/s
Iteration   4: 48.893 ops/s
Iteration   5: 48.862 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  48.415 Å}(99.9%) 0.700 ops/s [Average]
  (min, avg, max) = (47.817, 48.415, 48.893), stdev = 0.463
  CI (99.9%): [47.716, 49.115] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 51.870 ops/s
# Warmup Iteration   2: 52.985 ops/s
# Warmup Iteration   3: 57.736 ops/s
# Warmup Iteration   4: 57.343 ops/s
# Warmup Iteration   5: 57.686 ops/s
Iteration   1: 57.863 ops/s
Iteration   2: 57.933 ops/s
Iteration   3: 57.941 ops/s
Iteration   4: 57.892 ops/s
Iteration   5: 57.744 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 47.411 ops/s
# Warmup Iteration   2: 50.070 ops/s
# Warmup Iteration   3: 52.960 ops/s
# Warmup Iteration   4: 52.957 ops/s
# Warmup Iteration   5: 52.994 ops/s
Iteration   1: 53.076 ops/s
Iteration   2: 53.087 ops/s
Iteration   3: 52.676 ops/s
Iteration   4: 52.644 ops/s
Iteration   5: 52.936 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  55.379 Å}(99.9%) 3.983 ops/s [Average]
  (min, avg, max) = (52.644, 55.379, 57.941), stdev = 2.635
  CI (99.9%): [51.396, 59.363] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 59.095 ops/s
# Warmup Iteration   2: 61.641 ops/s
# Warmup Iteration   3: 65.290 ops/s
# Warmup Iteration   4: 65.310 ops/s
# Warmup Iteration   5: 65.210 ops/s
Iteration   1: 65.497 ops/s
Iteration   2: 65.418 ops/s
Iteration   3: 65.283 ops/s
Iteration   4: 65.434 ops/s
Iteration   5: 65.130 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 57.390 ops/s
# Warmup Iteration   2: 59.720 ops/s
# Warmup Iteration   3: 64.227 ops/s
# Warmup Iteration   4: 64.187 ops/s
# Warmup Iteration   5: 64.301 ops/s
Iteration   1: 64.439 ops/s
Iteration   2: 64.413 ops/s
Iteration   3: 64.318 ops/s
Iteration   4: 64.377 ops/s
Iteration   5: 64.202 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  64.851 Å}(99.9%) 0.818 ops/s [Average]
  (min, avg, max) = (64.202, 64.851, 65.497), stdev = 0.541
  CI (99.9%): [64.033, 65.669] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt   Score   Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  92.673 Å} 1.896  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10  48.415 Å} 0.700  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10  55.379 Å} 3.983  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10  64.851 Å} 0.818  ops/s
