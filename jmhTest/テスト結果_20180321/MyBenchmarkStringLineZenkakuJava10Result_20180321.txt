# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 76.852 ops/s
# Warmup Iteration   2: 90.275 ops/s
# Warmup Iteration   3: 89.877 ops/s
# Warmup Iteration   4: 90.629 ops/s
# Warmup Iteration   5: 91.003 ops/s
Iteration   1: 91.157 ops/s
Iteration   2: 89.775 ops/s
Iteration   3: 88.582 ops/s
Iteration   4: 90.481 ops/s
Iteration   5: 91.956 ops/s

# Run progress: 12.50% complete, ETA 00:01:13
# Fork: 2 of 2
# Warmup Iteration   1: 77.144 ops/s
# Warmup Iteration   2: 88.519 ops/s
# Warmup Iteration   3: 86.882 ops/s
# Warmup Iteration   4: 87.071 ops/s
# Warmup Iteration   5: 88.041 ops/s
Iteration   1: 83.799 ops/s
Iteration   2: 90.882 ops/s
Iteration   3: 90.995 ops/s
Iteration   4: 91.117 ops/s
Iteration   5: 91.459 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine":
  90.020 Å}(99.9%) 3.600 ops/s [Average]
  (min, avg, max) = (83.799, 90.020, 91.956), stdev = 2.381
  CI (99.9%): [86.420, 93.621] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat

# Run progress: 25.00% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 42.482 ops/s
# Warmup Iteration   2: 44.555 ops/s
# Warmup Iteration   3: 45.994 ops/s
# Warmup Iteration   4: 47.527 ops/s
# Warmup Iteration   5: 47.243 ops/s
Iteration   1: 46.431 ops/s
Iteration   2: 44.803 ops/s
Iteration   3: 44.493 ops/s
Iteration   4: 42.918 ops/s
Iteration   5: 41.391 ops/s

# Run progress: 37.50% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 41.396 ops/s
# Warmup Iteration   2: 41.675 ops/s
# Warmup Iteration   3: 40.239 ops/s
# Warmup Iteration   4: 41.935 ops/s
# Warmup Iteration   5: 44.524 ops/s
Iteration   1: 44.597 ops/s
Iteration   2: 44.830 ops/s
Iteration   3: 47.379 ops/s
Iteration   4: 46.114 ops/s
Iteration   5: 38.466 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat":
  44.142 Å}(99.9%) 3.973 ops/s [Average]
  (min, avg, max) = (38.466, 44.142, 47.379), stdev = 2.628
  CI (99.9%): [40.170, 48.115] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer

# Run progress: 50.00% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 43.282 ops/s
# Warmup Iteration   2: 49.097 ops/s
# Warmup Iteration   3: 51.446 ops/s
# Warmup Iteration   4: 49.235 ops/s
# Warmup Iteration   5: 50.376 ops/s
Iteration   1: 52.354 ops/s
Iteration   2: 51.368 ops/s
Iteration   3: 53.187 ops/s
Iteration   4: 54.140 ops/s
Iteration   5: 51.300 ops/s

# Run progress: 62.50% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 44.318 ops/s
# Warmup Iteration   2: 44.681 ops/s
# Warmup Iteration   3: 44.518 ops/s
# Warmup Iteration   4: 47.663 ops/s
# Warmup Iteration   5: 47.674 ops/s
Iteration   1: 47.377 ops/s
Iteration   2: 47.570 ops/s
Iteration   3: 48.456 ops/s
Iteration   4: 49.071 ops/s
Iteration   5: 50.119 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer":
  50.494 Å}(99.9%) 3.564 ops/s [Average]
  (min, avg, max) = (47.377, 50.494, 54.140), stdev = 2.357
  CI (99.9%): [46.931, 54.058] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 10, VM 10+46
# VM invoker: C:\Program Files\Java\latest\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder

# Run progress: 75.00% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 54.458 ops/s
# Warmup Iteration   2: 59.913 ops/s
# Warmup Iteration   3: 61.865 ops/s
# Warmup Iteration   4: 61.681 ops/s
# Warmup Iteration   5: 59.631 ops/s
Iteration   1: 62.020 ops/s
Iteration   2: 63.359 ops/s
Iteration   3: 63.644 ops/s
Iteration   4: 63.022 ops/s
Iteration   5: 62.851 ops/s

# Run progress: 87.50% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 56.364 ops/s
# Warmup Iteration   2: 61.029 ops/s
# Warmup Iteration   3: 62.433 ops/s
# Warmup Iteration   4: 64.443 ops/s
# Warmup Iteration   5: 64.840 ops/s
Iteration   1: 64.931 ops/s
Iteration   2: 62.410 ops/s
Iteration   3: 63.753 ops/s
Iteration   4: 57.405 ops/s
Iteration   5: 57.591 ops/s


Result "jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder":
  62.099 Å}(99.9%) 3.858 ops/s [Average]
  (min, avg, max) = (57.405, 62.099, 64.931), stdev = 2.552
  CI (99.9%): [58.240, 65.957] (assumes normal distribution)


# Run complete. Total time: 00:01:24

Benchmark                                                 Mode  Cnt   Score   Error  Units
jmhTest.MyBenchmarkStringLineZenkaku.call1StringLine     thrpt   10  90.020 Å} 3.600  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call2StringConcat   thrpt   10  44.142 Å} 3.973  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call3StringBuffer   thrpt   10  50.494 Å} 3.564  ops/s
jmhTest.MyBenchmarkStringLineZenkaku.call4StringBuilder  thrpt   10  62.099 Å} 3.858  ops/s
